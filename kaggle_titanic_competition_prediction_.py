# -*- coding: utf-8 -*-
"""Kaggle titanic competition prediction .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15e2JVpOpU00h7pD5gQ5y_lNE1SSXR69s
"""

import pandas as pd
from sklearn.metrics import confusion_matrix
import seaborn as sns
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split

df1 = pd.read_csv('/content/train.csv')

df2 = pd.read_csv('/content/test.csv')

df1.head()

df2.head()

df1.info()

df2.info()

df1.describe()

df1['Cabin'].isnull().sum()

df1['Cabin'].isnull().sum()/len(df1) * 100

# 77% of Cabin column is null so i will drop the column
df1 = df1.drop(columns ='Cabin')

df1.isnull().sum()

sns.heatmap(df1.isnull())

df1['Age'].isnull().sum()/len(df1) *100

df1['Age'].mean()

df1['Age'].fillna(df1['Age'].mean(), inplace = True)

df1['Age'].isnull().sum()

df1.info()

df1.head()

df1['Pclass'].unique()

df1.groupby('Sex')['Fare'].sum().sort_values(ascending = False)

df1.groupby('Pclass')['Fare'].sum().sort_values(ascending= False)

df1.groupby('Embarked')['Fare'].sum().sort_values(ascending = False)

df1.isnull().sum()

# convert age category to numerical
gender= pd.get_dummies(df1['Sex'], drop_first = True)

df1.dropna()

df1['Gender'] = gender

df1 = df1.dropna()

df1.info()

df1['Embarked'].unique()

df1.groupby('Embarked')['Fare'].sum().sort_values(ascending = False)

df1 =df1.drop(columns = 'Sex')

df1.info()

df1 =df1.drop(columns = 'Ticket')

df2.info()

df2 = df2.drop(columns = df2[['Cabin', 'Ticket']])

df2.head()

df2.isnull().sum()

df2['Age'].mean()

df2['Age'].fillna(df2['Age'].mean(), inplace = True)

df2.isnull().sum()

df2['Fare'].fillna(df2['Fare'].mean(),inplace =True)

df2.isnull().sum()

gender = pd.get_dummies(df2['Sex'],drop_first = True)

df2['Gender'] = gender

df2.head()

df2 = df2.drop(columns = 'Sex') # already deleted ignore the error message

lm = LogisticRegression()

df1 = df1.drop(columns = 'Name')

lm

df2['Embarked'].unique()

from sklearn.preprocessing import LabelEncoder

label_encoder = LabelEncoder()
df1['Embarked_encoded'] = label_encoder.fit_transform(df1['Embarked'])

df1['Embarked_encoded'].unique()

df1 = df1.drop(columns ='Embarked')

X_train = df1[['PassengerId', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked_encoded', 'Gender']]
y_train = df1['Survived']

X_train

lm.fit(X_train, y_train)

df2.head()

label_encoder = LabelEncoder()
df2['Embarked_encoded'] = label_encoder.fit_transform(df2['Embarked'])

df2.head()

df2 = df2.drop(columns = ['Name', 'Embarked'])

df2.head()

x_test = df2[['PassengerId', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked_encoded', 'Gender']]

y_pred = lm.predict(x_test)

y_pred

output_df = pd.DataFrame({'PassengerId': x_test['PassengerId'],  'Survived': y_pred})

output_df

output_df = pd.DataFrame({
    'PassengerId': x_test['PassengerId'],
    'Survived': y_pred
})

output_df

output_df.to_csv('output_file.csv', index=False)

# Download the CSV file to your local machine
from google.colab import files
files.download('output_file.csv')

# i got a score of 0.75 according to my kaggle score, my model accuracy is 75%